apiVersion: v1
kind: ConfigMap
metadata:
  name: corrida
data:
  service.passageiro: "http://passageiro-service:8080"
  JAEGER_ENDPOINT: "http://jaeger-collector.istio-system.svc:14268/api/traces"
  JAEGER_PROPAGATION: "b3"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: corrida
  labels:
    app: corrida
    version: '1.3'
spec:
  replicas: 1
  template:
    metadata:
      name: corrida
      labels:
        app: corrida
        version: "1.3"
      annotations:
        prometheus.istio.io/merge-metrics: "false"
        prometheus.io/scrape: "true"
        prometheus.io/path: "/actuator/prometheus"
        prometheus.io/port: "8080"
        sidecar.istio.io/inject: "true"
        teste: "ok"
    spec:
      containers:
        - name: corrida
          image: marcusantunius/corrida:1.3
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
          envFrom:
            - configMapRef:
                name: corrida
      restartPolicy: Always
  selector:
    matchLabels:
      app: corrida
---
apiVersion: v1
kind: Service
metadata:
  name: corrida
spec:
  selector:
    app: corrida
  ports:
    - port: 8080
  type: NodePort
---
apiVersion: networking.istio.io/v1alpha3
kind: Gateway
metadata:
  name: gateway
spec:
  selector:
    istio: ingressgateway # use istio default controller
  servers:
    - port:
        number: 80
        name: http
        protocol: HTTP
      hosts:
        - "*"
---
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: corrida
spec:
  hosts:
    - "*"
  gateways:
    - gateway
  http:
    - match:
        - uri:
            exact: /corrida
      route:
        - destination:
            host: corrida
            port:
              number: 8080